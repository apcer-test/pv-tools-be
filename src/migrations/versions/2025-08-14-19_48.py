"""empty message

Revision ID: 4be868794607
Revises: 68ad1b06887b
Create Date: 2025-08-14 19:48:21.274729

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4be868794607'
down_revision = '68ad1b06887b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('case_number_configurations', sa.Column('client_id', sa.String(), nullable=False))
    op.create_foreign_key(None, 'case_number_configurations', 'clients', ['client_id'], ['id'])
    op.create_foreign_key(None, 'clients', 'media', ['media_id'], ['id'], use_alter=True)
    op.create_foreign_key(None, 'user_role_link', 'users', ['user_id'], ['id'], ondelete='CASCADE', use_alter=True)
    op.create_foreign_key(None, 'user_role_link', 'clients', ['client_id'], ['id'], ondelete='CASCADE', use_alter=True)
    op.create_foreign_key(None, 'user_role_link', 'user_type', ['user_type_id'], ['id'], ondelete='CASCADE', use_alter=True)
    op.create_foreign_key(None, 'user_role_link', 'roles', ['role_id'], ['id'], ondelete='CASCADE', use_alter=True)
    op.create_foreign_key(None, 'user_type', 'clients', ['client_id'], ['id'], ondelete='CASCADE', use_alter=True)
    op.create_foreign_key(None, 'users', 'users', ['reporting_manager_id'], ['id'], ondelete='SET NULL', use_alter=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'user_type', type_='foreignkey')
    op.drop_constraint(None, 'user_role_link', type_='foreignkey')
    op.drop_constraint(None, 'user_role_link', type_='foreignkey')
    op.drop_constraint(None, 'user_role_link', type_='foreignkey')
    op.drop_constraint(None, 'user_role_link', type_='foreignkey')
    op.add_column('extraction_audit', sa.Column('document_intake_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('extraction_audit_document_intake_id_fkey'), 'extraction_audit', 'document_intake_history', ['document_intake_id'], ['id'])
    op.drop_constraint(None, 'clients', type_='foreignkey')
    op.drop_constraint(None, 'case_number_configurations', type_='foreignkey')
    op.drop_column('case_number_configurations', 'client_id')
    op.create_table('document_intake_history',
    sa.Column('status', postgresql.ENUM('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', name='documentintakestatus'), autoincrement=False, nullable=False),
    sa.Column('source', postgresql.ENUM('USER_UPLOAD', 'SYSTEM_UPLOAD', name='documentintakesource'), autoincrement=False, nullable=False),
    sa.Column('email_body', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('doc_type_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('request_id', sa.VARCHAR(length=26), autoincrement=False, nullable=False),
    sa.Column('processing_started_at', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('processing_completed_at', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('error_code', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('failed_at_step', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('meta_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doc_type_id'], ['doc_type.id'], name=op.f('document_intake_history_doc_type_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('document_intake_history_pkey'))
    )
    op.create_index(op.f('ix_document_intake_history_request_id'), 'document_intake_history', ['request_id'], unique=False)
    # ### end Alembic commands ###
