"""empty message

Revision ID: 77f144577bf2
Revises: 4be868794607
Create Date: 2025-08-18 13:10:35.181295

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '77f144577bf2'
down_revision = '4be868794607'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TABLE IF EXISTS user_type CASCADE;")
    op.execute("ALTER TABLE user_role_link DROP CONSTRAINT IF EXISTS user_role_link_user_type_id_fkey;")
    op.execute("ALTER TABLE user_role_link DROP COLUMN IF EXISTS user_type_id;")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_role_link', sa.Column('user_type_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('user_role_link_user_type_id_fkey'), 'user_role_link', 'user_type', ['user_type_id'], ['id'], ondelete='CASCADE')
    op.create_table('user_type',
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('meta_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('client_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True, comment='User ID who created this record'),
    sa.Column('updated_by', sa.VARCHAR(), autoincrement=False, nullable=True, comment='User ID who last updated this record'),
    sa.Column('deleted_by', sa.VARCHAR(), autoincrement=False, nullable=True, comment='User ID who soft deleted this record'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name=op.f('user_type_client_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('user_type_created_by_fkey')),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name=op.f('user_type_deleted_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('user_type_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_type_pkey')),
    sa.UniqueConstraint('name', 'client_id', name=op.f('uq_name_client_id'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('slug', name=op.f('user_type_slug_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
